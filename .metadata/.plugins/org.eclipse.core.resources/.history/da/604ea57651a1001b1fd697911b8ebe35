/*
 * generated by Xtext 2.24.0
 */
package hu.bme.mit.dipterv.text.scoping;

import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.IScope;
import hu.bme.mit.dipterv.text.minotorDsl.ChangeToMessage;
import hu.bme.mit.dipterv.text.minotorDsl.ChangeToRelation;
import hu.bme.mit.dipterv.text.minotorDsl.AppearMessage;
import hu.bme.mit.dipterv.text.minotorDsl.DisappearMessage;
import hu.bme.mit.dipterv.text.minotorDsl.AssertionEntity;
import hu.bme.mit.dipterv.text.minotorDsl.AssertionRelation;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class MinotorDslScopeProvider extends AbstractDeclarativeScopeProvider {
	IScope scope_ChangeToMessage_attribute(ChangeToMessage ctx, EReference ref) {
        return Scopes.scopeFor(ctx.getEntity().getAttributes());
    }
    
    IScope scope_ChangeToMessage_entity(ChangeToMessage ctx, EReference ref) {
    	return Scopes.scopeFor(ctx.getContext().getEntities());
    }
    
    IScope scope_ChangeToRelation_relation(ChangeToRelation ctx, EReference ref) {
    	return Scopes.scopeFor(ctx.getContext().getRelations());
    }
    
    IScope scope_ChangeToRelation_attribute(ChangeToRelation ctx, EReference ref) {
    	return Scopes.scopeFor(ctx.getRelation().getAttributes());
    }
    
    IScope scope_AppearMessage_entity(AppearMessage app, EReference ref) {
    	return Scopes.scopeFor(app.getContext().getEntities());
    }
    
    IScope scope_DisappearMessage_entity(DisappearMessage dis, EReference ref) {
    	return Scopes.scopeFor(dis.getContext().getEntities());
    }
    
    IScope scope_AssertionEntity_entity(AssertionEntity assertion, EReference ref) {
    	return Scopes.scopeFor(assertion.getContext().getEntities());
    }
    
    IScope scope_AssertionEntity_attribute(AssertionEntity assertion, EReference ref) {
    	return Scopes.scopeFor(assertion.entity.attributes);
    }
    
    IScope scope_AssertionRelation_relation(AssertionRelation assertion, EReference ref) {
    	return Scopes.scopeFor(assertion.getContext().getRelations());
    }
    
    IScope scope_AssertionRelation_attribute(AssertionRelation assertion, EReference ref) {
    	return Scopes.scopeFor(assertion.relation.attributes);
    }
}
